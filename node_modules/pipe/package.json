{
  "name": "pipe",
  "version": "1.0.0",
  "description": "Pipe streams together with a more awesome syntax, like `a | b | c | pipe(process.stdout)`",
  "main": "pipe.js",
  "scripts": {
    "test": "node ./test.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/hij1nx/pipechain.git"
  },
  "author": {
    "name": "hij1nx"
  },
  "license": "MIT",
  "devDependencies": {
    "through": "~2.3.4"
  },
  "readme": "# SYNOPSIS\nMagical pipes\n\n# DESCRIPTION\nPipe streams together with a more awesome syntax, like `a | b | c`\n\n# MOTIVATION\nFun\n\n# EXAMPLES\n`pipechain` does not require `through`, i just like using through.\n\n```js\nvar through = require('through')\nrequire('pipechain').install()\n\nvar a = through(function(d) {\n  this.queue(d.toString().toUpperCase())\n})\n\nvar b = through(function(d) {\n  this.queue(d.split('-').join(','))\n})\n\nvar c = through(function(d) {\n  this.queue(d.split(',').reverse().toString())\n})\n\na | b | c | process.stdout\n\na.write('a-s-d-f') // OMG WTF? => F,D,S,A\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/hij1nx/pipechain/issues"
  },
  "_id": "pipe@1.0.0",
  "dist": {
    "shasum": "8ddf7661669bc42802343d15dd6e32f4a494c881"
  },
  "_from": "pipe@",
  "_resolved": "https://registry.npmjs.org/pipe/-/pipe-1.0.0.tgz"
}
